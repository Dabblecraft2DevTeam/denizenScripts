flight_givepermission:
    type: world
    events:
        # newly joined players need flight toggle permissions
        on player join:
            - execute as_player "fly"
        
        # account for world changes
        on player changes gamemode to survival:
            - wait 1t
            - execute as_player "fly"

flight:
    type: world
    events:
        on player starts flying:
            # disallow flying in the nether
            - if <player.location.world.name> == neuernether {
                - narrate "Im Nether ist das Fliegen deaktiviert!"
                - determine cancelled
            }
            
            # check if player has enough money
            - if <player.money> < 100 {
                - narrate "Du hast nicht genug Geld um zu fliegen!"
                - determine cancelled
            } else {
                - run flight_calcs
            }
            
flight_calcs:
    type: task
    script:
        - flag player flying:true
        
        # while player is flying, substract money in intervals
        # based on the travelled distance
        - while <player.flag[flying]> == true {
            - flag player pos1:<player.location>
            - wait 1s
            - flag player pos2:<player.location>
            
            - define euclidean_distance <player.flag[pos1].as_location.distance[<player.flag[pos2].as_location>]>
            
            # prevent huge costs if someone teleports to a remote location mid-flight
            # by capping the distance; no one can fly 30 blocks in a one second anyway
            - if %euclidean_distance% > 30 {
                - define euclidean_distance 30.0
            }
            
            # change the price per block flown here
            - define costs <def[euclidean_distance].mul[0.035]>
            
            # take money from player (but only if they are in survival mode)
            - if <player.gamemode.id> == 0 {
                - take money qty:%costs%
            }
            
            # check if player stopped flying or force him to flying
            # if he has no money left.
            - if <player.is_flying> == false || <player.money> <= 0 {
                - flag player flying:false
            }
        }
            
